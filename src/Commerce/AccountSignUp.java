/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Commerce;

import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class AccountSignUp extends javax.swing.JFrame {

    /**
     * Creates new form AccountSignUp
     */
    public boolean userON, passON, customerON, supplierON, maleON, femaleON, addressON, emailON, phoneON;

    
    public int Account_Number;


    public AccountSignUp() {
        initComponents();
        
        this.addWindowListener( new WindowAdapter() {
    public void windowOpened( WindowEvent e ){
            username.requestFocus();
            passwordfield1.requestFocus();
            passwordfield2.requestFocus();
            address.requestFocus();
            email.requestFocus();
            phone.requestFocus(); 
        }
        }); 
        
        this.Account_Number = checkAccount("Account");
        //System.out.println(Account_Number);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    public void close(){
        WindowEvent closeW = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeW);
    }
    private void addAccount(int ID, String username, String password, String email, String phone, String address, boolean sex, boolean func){
        String id = ID +"";
        
        String functionAccount = (func == true) ? "INSERT INTO Supplier(Supplier_ID) VALUES ('" + id + "');" : "INSERT INTO Customer(Customer_ID) VALUES ('" + id + "');"  ;
        System.out.printf("%s\n", functionAccount);
        String gender = (sex == true) ? "Male" : "Female";
        String code = "INSERT INTO Account(ID, User_Name, Phone_Number, Email, PassWord, Address, Sex) VALUES ("
                + id + ",'" + username + "','" + phone +"','" + email + "','" + password + "','" + address + "','" +gender
                +"')";
        
        

        String connect = "jdbc:sqlserver://localhost:1433;databaseName=Commerce;user=sa;password=sa;encrypt=false;trustServerCertificate=false;";

       try{
           Connection con = DriverManager.getConnection(connect);
           PreparedStatement stmt = con.prepareStatement(code);
           stmt.executeUpdate();
           PreparedStatement stm = con.prepareStatement(functionAccount);
           stm.executeUpdate();
           /*
           PreparedStatement stmt = con.prepareStatement(
     "INSERT INTO Account(ID, User_Name, Phone_Number, Email, PassWord, Address, Sex, Birth_Date) VALUES (?,?,?,?,?,?,?,'26-11-2003');");
           stmt.setInt(1, ID);
           stmt.setString(2, username); 
           stmt.setString(3, phone); 
           stmt.setString(4, email); 
           stmt.setString(5, password); 
           stmt.setString(6, address); 
           stmt.setString(7, gender); 
           */
           
           
             
      
        }catch(SQLException e){
        }    
    }
    private int checkAccount(String table){
        
        int res = 0;
        String code = "SELECT * FROM " + table +";" ;
        //System.out.println(code);

        String connect = "jdbc:sqlserver://localhost:1433;databaseName=Commerce;user=sa;password=sa;encrypt=false;trustServerCertificate=false;";

       try(Connection con = DriverManager.getConnection(connect);Statement stmt = con.createStatement();){
            ResultSet rs = stmt.executeQuery(code);
                while(rs.next()){
                res++;
            }            
        }catch(SQLException e){
        }
       //System.out.println(res);
       return res;
    }

    private boolean checkExistence(String object,String table,String name){
        int numberOfColumns = 0;
        int res = 0;
        String code = "SELECT "+ object + " FROM " + table + " WHERE "+ object + " ='" + name+"'";


    String connect = "jdbc:sqlserver://localhost:1433;databaseName=Commerce;user=sa;password=sa;encrypt=false;trustServerCertificate=false;";

       try(Connection con = DriverManager.getConnection(connect);Statement stmt = con.createStatement();){
            ResultSet rs = stmt.executeQuery(code);
            //ResultSet rs = ExecutionSQL();            
            
            //StringBuilder results = new StringBuilder();
            ResultSetMetaData metaData = rs.getMetaData();

            numberOfColumns = metaData.getColumnCount();
            //System.out.println(numberOfColumns);
            /*
            for(int i = 1; i <= numberOfColumns; i++){
                results.append(metaData.getColumnName(i)).append("<>\t");
            }
            results.append("\n");
            */
            while(rs.next()){
                res++;
            /*
            for(int i = 1; i <= numberOfColumns; i++){
                results.append(rs.getObject(i)).append("\t");
                //results.append(rs.getObject(i)).append("\t");
            }
            results.append("\n");
            
            */
            }
            
            //Area.setText(results.toString());
            
        }catch(SQLException e){
        }
       if(res > 0)
            return true;
       else
            return false;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        passwordfield2 = new javax.swing.JPasswordField();
        passwordfield1 = new javax.swing.JPasswordField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        Male = new javax.swing.JRadioButton();
        Female = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        Customer = new javax.swing.JRadioButton();
        Supplier = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Area = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField1.setEditable(false);
        jTextField1.setText("Username");

        passwordfield2.setText("jPasswordField1");
        passwordfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordfield2ActionPerformed(evt);
            }
        });

        passwordfield1.setText("jPasswordField2");
        passwordfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordfield1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setText("Address");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("Email");

        jTextField4.setEditable(false);
        jTextField4.setText("Phone");

        buttonGroup4.add(Male);
        Male.setText("Male");
        Male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleActionPerformed(evt);
            }
        });

        buttonGroup4.add(Female);
        Female.setText("Female");
        Female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemaleActionPerformed(evt);
            }
        });

        jButton1.setText("Sign Up");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("Sign Up");

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        jTextField6.setEditable(false);
        jTextField6.setText("Password");

        jTextField7.setEditable(false);
        jTextField7.setText("Input PassWord Again");

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        buttonGroup1.add(Customer);
        Customer.setText("Customer");
        Customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerActionPerformed(evt);
            }
        });

        buttonGroup1.add(Supplier);
        Supplier.setText("Supplier");
        Supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplierActionPerformed(evt);
            }
        });

        Area.setEditable(false);
        Area.setColumns(20);
        Area.setRows(5);
        jScrollPane1.setViewportView(Area);

        jButton2.setText("Sign In");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back To Main");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Male)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(22, 22, 22)
                                            .addComponent(Female))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(69, 69, 69)
                                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(69, 69, 69)
                                            .addComponent(passwordfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(passwordfield2))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(71, 71, 71)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(address)
                                        .addComponent(email)
                                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Customer)
                                    .addGap(55, 55, 55)
                                    .addComponent(Supplier)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(417, 417, 417)
                        .addComponent(jLabel1)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Customer)
                    .addComponent(Supplier))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordfield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Female)
                    .addComponent(Male))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(127, 127, 127))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        jButton1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
        
        username.selectAll();
        String userTMP = username.getText();
        
        if(username.getText().length() == 0){
        JOptionPane.showMessageDialog(null, "Please input query string!", "Message", JOptionPane.WARNING_MESSAGE);
        userON = false;
        return;
        }
        if( checkExistence("User_Name", "Account", userTMP) == true){
        JOptionPane.showMessageDialog(null, "Existence UserName! Try Another UserName", "Message", JOptionPane.WARNING_MESSAGE);
        userON = false;
        
        }else
        {
                //JOptionPane.showMessageDialog(null, "OK!", "Message", JOptionPane.WARNING_MESSAGE);
                userON = true;
                //return;
        }
        
        Area.setText(( userON == false) ? "INVALID": "VALID_User" );
        //userON = true;
        //
        //usernameText.replaceSelection("");
    }//GEN-LAST:event_usernameActionPerformed

    private void passwordfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordfield1ActionPerformed
        // TODO add your handling code here:
        passwordfield1.selectAll();
        if(passwordfield1.getPassword().length == 0){
        JOptionPane.showMessageDialog(null, "Please input password!", "Message", JOptionPane.WARNING_MESSAGE);
        passON = false;
        return;
        }else
        passON = true;
    }//GEN-LAST:event_passwordfield1ActionPerformed

    private void passwordfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordfield2ActionPerformed
        // TODO add your handling code here:
        passwordfield1.selectAll();
        char[] password_TMP = passwordfield1.getPassword();

        passwordfield2.selectAll();
        char[] password_CF = passwordfield2.getPassword();

        int passTMP_len = password_TMP.length;
        int passCF_len = password_CF.length;

        if(passTMP_len != passCF_len){
            JOptionPane.showMessageDialog(null, "Incorrect PassWord!", "Message", JOptionPane.WARNING_MESSAGE);
            passON = false;
            return;

        }else if(passTMP_len == passCF_len){
            for(int i = 0; i < passTMP_len; i++ )
                if(password_TMP[i] != password_CF[i]){
                    JOptionPane.showMessageDialog(null, "Incorrect PassWord!Input Again", "Message", JOptionPane.WARNING_MESSAGE);
                    passON = false;
                    return;
                }
        }else

        passON = true;

    }//GEN-LAST:event_passwordfield2ActionPerformed

    private void CustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerActionPerformed
        // TODO add your handling code here:
        if(Customer.isSelected()){
        customerON = true;
        supplierON = false;
        }
    }//GEN-LAST:event_CustomerActionPerformed

    private void SupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplierActionPerformed
        // TODO add your handling code here:
        if(Supplier.isSelected())
        supplierON = true;
        customerON = false;
    }//GEN-LAST:event_SupplierActionPerformed

    private void MaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleActionPerformed
        // TODO add your handling code here:
        if(Male.isSelected()){
        maleON = true;
        femaleON = false;
        }
    }//GEN-LAST:event_MaleActionPerformed

    private void FemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemaleActionPerformed
        // TODO add your handling code here:
        if(Female.isSelected()){
        femaleON = true;
        maleON = false;
        }
    }//GEN-LAST:event_FemaleActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
        address.selectAll();
        if(address.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "Please input query string!", "Message", JOptionPane.WARNING_MESSAGE);
            addressON = false;
            //return;
        }else
        addressON = true;
        Area.setText(( addressON == false ) ? "INVALID" : "VALID_Address");

    }//GEN-LAST:event_addressActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
        email.selectAll();
        String mail = email.getText();
        int mail_len = mail.length();


        if(mail_len <= 10){
            JOptionPane.showMessageDialog(null, "Invalid Email!", "Message", JOptionPane.WARNING_MESSAGE);
            emailON = false;
            return;
        }else if( mail_len > 10){

            String emailFormat = "@gmail.com";
            int format_len = emailFormat.length();

            for(int i = mail_len - 1;i >= mail_len - 10; i--)
                if(emailFormat.charAt( --format_len) != mail.charAt(i)){
                    JOptionPane.showMessageDialog(null, "Invalid Email!!", "Message", JOptionPane.WARNING_MESSAGE);
                    emailON = false;
                    return;
                    }
        }
        
        if(checkExistence("Email", "Account", mail) == true){
                    JOptionPane.showMessageDialog(null, "Invalid Email!!", "Message", JOptionPane.WARNING_MESSAGE);
                    emailON = false;
                    return;
        }else
        emailON = true;
        
        Area.setText(( emailON == false ) ? "INVALID" : "VALID_Email");
    }//GEN-LAST:event_emailActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
        phone.selectAll();
        String phoneTMP = phone.getText();
        
        if(phone.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "Please input query string!", "Message", JOptionPane.WARNING_MESSAGE);
            phoneON = false;
            return;
        }else
        //928476034 
        if(checkExistence("Phone_Number","Account", phoneTMP) == true){
            JOptionPane.showMessageDialog(null, "Invalid Phone Number!Input Again! :)))", "Message", JOptionPane.WARNING_MESSAGE);
            phoneON = false;
            //return;
        }else
         phoneON = true;
         
        Area.setText(( phoneON == false ) ? "INVALID" : "VALID_Phone");
        //if(phoneON == true)
        //    Area.setText(phoneTMP);

        
    }//GEN-LAST:event_phoneActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //SIGN_UP_BUTTON                
        
        if(userON == true && passON == true && addressON == true && emailON == true && phoneON == true){           
           if(customerON == true || supplierON == true){
                if(maleON == true || femaleON == true){
                    boolean GENDER = (maleON) ? true : false;
                    boolean FUNCTION = (customerON) ? false : true;
                    
                    String USERNAME = username.getText();
                    
                    char[] c = passwordfield1.getPassword();
                    String PASSWORD = String.valueOf(c);
                    
                    String ADDRESS = address.getText();
                    String EMAIL = email.getText();
                    String PHONE = phone.getText();
                    Account_Number ++;
                    addAccount(Account_Number ,USERNAME, PASSWORD, EMAIL, PHONE, ADDRESS, GENDER, FUNCTION);
                    
                    // empty
                    username.replaceSelection("");
                    passwordfield1.replaceSelection("");
                    passwordfield2.replaceSelection("");
                    address.replaceSelection("");
                    email.replaceSelection("");
                    phone.replaceSelection("");
                    Area.replaceSelection("");
                    
                    
                    
                    
                    JOptionPane.showMessageDialog(null, "Sign Up Completed!", "Message", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }else{
            JOptionPane.showMessageDialog(null, "Sign Up Incompleted!", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
               
           
        }else{
            JOptionPane.showMessageDialog(null, "Sign Up Incompleted!", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
        
        close();
        AccountSignIn j1 = new AccountSignIn();
        j1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        close();
        productFrm jj = new productFrm();
        jj.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountSignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea Area;
    public javax.swing.JRadioButton Customer;
    public javax.swing.JRadioButton Female;
    public javax.swing.JRadioButton Male;
    public javax.swing.JRadioButton Supplier;
    public javax.swing.JTextField address;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    public javax.swing.JTextField email;
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    public javax.swing.JPasswordField passwordfield1;
    public javax.swing.JPasswordField passwordfield2;
    public javax.swing.JTextField phone;
    public javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
